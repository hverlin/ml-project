,mean_fit_time,mean_score_time,mean_test_score,mean_train_score,param_classify,param_reduce_dim,param_reduce_dim__k,params,rank_test_score,split0_test_score,split0_train_score,split1_test_score,split1_train_score,split2_test_score,split2_train_score,split3_test_score,split3_train_score,split4_test_score,split4_train_score,std_fit_time,std_score_time,std_test_score,std_train_score
0,4.664886474609375,0.00405416488647461,0.9780413580128771,0.9783283795966545,"MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)","SelectKBest(k=5, score_func=<function f_regression at 0x7f0527ce6378>)",5,"{'reduce_dim__k': 5, 'classify': MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=5, score_func=<function f_regression at 0x7f0527ce6378>)}",3,0.9752033215539238,0.9792481253923471,0.9772884574330857,0.9785953268647763,0.980925997965974,0.9770651081953192,0.9744829913612085,0.9793441891439465,0.9823060217501934,0.9773891483868831,0.7132373031548384,0.0010018552567460633,0.003091659357189587,0.0009409646229122281
1,5.618431282043457,0.004043388366699219,0.9979016031692961,0.9980382568232635,"MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)","SelectKBest(k=10, score_func=<function f_regression at 0x7f0527ce6378>)",10,"{'reduce_dim__k': 10, 'classify': MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7f0527ce6378>)}",1,0.9974045177352421,0.99765966753669,0.9982953226058365,0.9983368286672993,0.9977063259035882,0.997565390518533,0.9982376495855497,0.9986884627743907,0.9978642000162646,0.9979409346194039,0.6704306977723301,0.0011771191637389498,0.00033303703208332217,0.00042150134670105503
2,7.010316848754883,0.004848003387451172,0.9974545646544136,0.9977348092841629,"MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)","SelectKBest(k=20, score_func=<function f_regression at 0x7f0527ce6378>)",20,"{'reduce_dim__k': 20, 'classify': MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=20, score_func=<function f_regression at 0x7f0527ce6378>)}",2,0.9970370142041779,0.9972752177655206,0.9977614944397554,0.9979844626342479,0.9981000106231065,0.9981751026522366,0.9969223304503725,0.9977618514848132,0.9974519735546559,0.997477411883996,1.1738088910683484,0.001235221021504357,0.00044009879160777633,0.00032692326665900706

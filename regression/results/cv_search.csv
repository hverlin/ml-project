,mean_fit_time,mean_score_time,mean_test_score,mean_train_score,param_classify,param_classify__alpha,param_classify__learning_rate,param_classify__learning_rate_init,param_classify__solver,param_reduce_dim,param_reduce_dim__k,params,rank_test_score,split0_test_score,split0_train_score,split1_test_score,split1_train_score,split2_test_score,split2_train_score,split3_test_score,split3_train_score,split4_test_score,split4_train_score,std_fit_time,std_score_time,std_test_score,std_train_score
1,3.360404205322266,0.005911397933959961,0.9994131355744352,0.9996295204447405,"MLPRegressor(activation='relu', alpha=0.10000000000000001, batch_size='auto',
       beta_1=0.9, beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.10000000000000001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.1,adaptive,0.1,sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.10000000000000001, 'classify': MLPRegressor(activation='relu', alpha=0.10000000000000001, batch_size='auto',
       beta_1=0.9, beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.10000000000000001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.10000000000000001, 'reduce_dim__k': 10}",1,0.9996473196066374,0.999864059105177,0.9996606675803091,0.9997536101964061,0.9992411157561718,0.9994504264976941,0.9994322197694111,0.999718250986788,0.9990843551596469,0.9993612554376369,0.5355902359549,0.002707145349429969,0.0002254621211610058,0.00019095576173803002
41,3.970706653594971,0.0061397552490234375,0.9993694297240941,0.9996442411917974,"MLPRegressor(activation='relu', alpha=1.0000000000000001e-05,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.10000000000000001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)","0,00001",adaptive,0.1,sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.10000000000000001, 'classify': MLPRegressor(activation='relu', alpha=1.0000000000000001e-05,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.10000000000000001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 1.0000000000000001e-05, 'reduce_dim__k': 10}",2,0.9992965172105804,0.9997208123975412,0.9995280316377655,0.9996646519633728,0.9992736432666601,0.9993663283748601,0.9992656680645008,0.9997154706227959,0.9994832884409643,0.9997539426004173,0.31043091483245117,0.0019549693353313807,0.0001125843119477615,0.0001418614210114649
51,4.561809110641479,0.005872964859008789,0.9993371722303793,0.9996257235247965,"MLPRegressor(activation='relu', alpha=9.9999999999999995e-07,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.10000000000000001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)","0,000001",adaptive,0.1,sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.10000000000000001, 'classify': MLPRegressor(activation='relu', alpha=9.9999999999999995e-07,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.10000000000000001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 9.9999999999999995e-07, 'reduce_dim__k': 10}",3,0.9993591054210132,0.9997325942982699,0.9992505451017353,0.9994433981821992,0.9993551978873324,0.9995638670537101,0.9993521991797235,0.9997176362447039,0.9993688135620928,0.9996711218450993,0.47151816149171405,0.0008732412888510334,4.367432118827706e-05,0.00010862695002473108
11,4.5633221626281735,0.006415605545043945,0.9993070235648587,0.9996008657732146,"MLPRegressor(activation='relu', alpha=0.01, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.10000000000000001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.01,adaptive,0.1,sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.10000000000000001, 'classify': MLPRegressor(activation='relu', alpha=0.01, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.10000000000000001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.01, 'reduce_dim__k': 10}",4,0.9994226562855675,0.9996749999944627,0.9993128057402756,0.999488311865166,0.9993963773848502,0.9995454135077803,0.9991309136106427,0.9995873628656056,0.9992723648029576,0.9997082406330581,0.6440855137830561,0.0029984405919462574,0.00010354169261571698,8.117993318449599e-05
21,4.1396496295928955,0.01002359390258789,0.9992739049079536,0.9995354123155431,"MLPRegressor(activation='relu', alpha=0.001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.10000000000000001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.001,adaptive,0.1,sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.10000000000000001, 'classify': MLPRegressor(activation='relu', alpha=0.001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.10000000000000001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.001, 'reduce_dim__k': 10}",5,0.9991445182795151,0.9996291540416384,0.9996239011761836,0.9996935882434852,0.9992384789463324,0.9992252181628454,0.9992416427542656,0.999678114649465,0.9991209833834717,0.9994509864802821,0.6940753830415822,0.006107587318609569,0.00018161449576554054,0.00017749322551906702
31,3.0300690650939943,0.004574918746948242,0.9992267324208127,0.9994946731282056,"MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.10000000000000001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.0001,adaptive,0.1,sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.10000000000000001, 'classify': MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.10000000000000001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.0001, 'reduce_dim__k': 10}",6,0.9990660535281867,0.9994955453278188,0.9993140083363364,0.9993541050482744,0.9994989261537981,0.9995926788269935,0.99881228437949,0.9993961115041711,0.9994423897062527,0.9996349249337695,0.35958259254308156,0.0016781419580576772,0.0002552643586410444,0.00010839762499140192
42,3.893444633483887,0.007518625259399414,0.9989566829421926,0.9993585596578678,"MLPRegressor(activation='relu', alpha=1.0000000000000001e-05,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.01, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)","0,00001",adaptive,0.01,adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.01, 'classify': MLPRegressor(activation='relu', alpha=1.0000000000000001e-05,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.01, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 1.0000000000000001e-05, 'reduce_dim__k': 10}",7,0.9989451916327773,0.9994862524755397,0.9992225355424971,0.9994895770558863,0.9990661412863768,0.9992458383524823,0.9986116184121933,0.9992522163168666,0.9989379278371185,0.9993189140885638,0.7189390717421859,0.0019425283891289194,0.00020110299262929217,0.00010868098665091148
52,4.955332040786743,0.008846569061279296,0.9987665061432072,0.9991994058768595,"MLPRegressor(activation='relu', alpha=9.9999999999999995e-07,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.01, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)","0,000001",adaptive,0.01,adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.01, 'classify': MLPRegressor(activation='relu', alpha=9.9999999999999995e-07,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.01, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 9.9999999999999995e-07, 'reduce_dim__k': 10}",8,0.9987244067889439,0.9992096632481154,0.9982242403746625,0.9986113544445567,0.9991891871319417,0.9994090830762551,0.9986125266558867,0.9993213170899408,0.9990821697646002,0.9994456115254293,0.94211250000887,0.004828071036173191,0.00034578517665994344,0.000305075005173295
32,3.648079490661621,0.0070401191711425785,0.9987029769985416,0.9992122585835729,"MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.01, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.0001,adaptive,0.01,adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.01, 'classify': MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.01, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.0001, 'reduce_dim__k': 10}",9,0.9983213194280977,0.9990213496167162,0.9989750415030182,0.9992415554605254,0.9991637841325874,0.9993170332598819,0.9984061108060035,0.9993089952986903,0.9986486291230008,0.9991723592820507,0.7115405218614342,0.0019093854793091095,0.00032345263588620774,0.0001088413705672477
12,5.3635321140289305,0.018189334869384767,0.998681584439391,0.9990395249729123,"MLPRegressor(activation='relu', alpha=0.01, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.01, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.01,adaptive,0.01,adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.01, 'classify': MLPRegressor(activation='relu', alpha=0.01, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.01, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.01, 'reduce_dim__k': 10}",10,0.9986485104247612,0.9991250133163149,0.9988923586856783,0.9991333101487918,0.9988845568176465,0.9991177158154788,0.9984234708497254,0.9991228316426437,0.9985590254191441,0.9986987539413315,1.0125411648248188,0.019584310999451394,0.00018349975383654416,0.0001704597437051576
22,3.8387038707733154,0.006047439575195312,0.9986792792880779,0.9991079685315312,"MLPRegressor(activation='relu', alpha=0.001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.01, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.001,adaptive,0.01,adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.01, 'classify': MLPRegressor(activation='relu', alpha=0.001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.01, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.001, 'reduce_dim__k': 10}",11,0.9985502211345396,0.9992009038791893,0.9988165962241301,0.9989821437987573,0.9989265040546146,0.999109979458731,0.998151071870299,0.998960424580702,0.9989520031568057,0.9992863909402762,0.43621484736442406,0.0018596683734470427,0.00030000447259370656,0.0001249613215509494
2,3.9028364181518556,0.005373430252075195,0.9986282599440636,0.9990562858853591,"MLPRegressor(activation='relu', alpha=0.10000000000000001, batch_size='auto',
       beta_1=0.9, beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.01, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.1,adaptive,0.01,adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.01, 'classify': MLPRegressor(activation='relu', alpha=0.10000000000000001, batch_size='auto',
       beta_1=0.9, beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.01, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.10000000000000001, 'reduce_dim__k': 10}",12,0.9988534391864357,0.9994295628105259,0.9985261056899294,0.9988042097812562,0.9992623393438617,0.9993818422264474,0.9977825563784973,0.9986854408622766,0.9987168591215939,0.9989803737462897,1.0693275841814651,0.0021872448219394623,0.00048708566046472485,0.00030071702324531994
33,5.2498987197875975,0.006509160995483399,0.9985739190489132,0.9988293546965735,"MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.01, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.0001,adaptive,0.01,sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.01, 'classify': MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.01, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.0001, 'reduce_dim__k': 10}",13,0.9985893009122968,0.9989643555489878,0.9987838292152738,0.9988736865411235,0.9986188565991279,0.9986537848870738,0.9982379673135127,0.998802043603632,0.9986396412043553,0.99885290290205,0.5201039087684614,0.0018554729911891407,0.00018083209522457805,0.00010228950520984207
13,6.002609968185425,0.011974239349365234,0.998476125784863,0.9987690570827971,"MLPRegressor(activation='relu', alpha=0.01, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.01, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.01,adaptive,0.01,sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.01, 'classify': MLPRegressor(activation='relu', alpha=0.01, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.01, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.01, 'reduce_dim__k': 10}",14,0.9985032726822374,0.9988974710311074,0.9984895519962667,0.9986322307095417,0.9987207396265904,0.9987191644725174,0.9983206744084334,0.9988215496756756,0.9983463902107865,0.998774869525143,0.9946701658060264,0.009935835063301268,0.00014265314463350032,8.99890303231748e-05
3,5.0352123260498045,0.003602457046508789,0.9984649461338678,0.998737597846177,"MLPRegressor(activation='relu', alpha=0.10000000000000001, batch_size='auto',
       beta_1=0.9, beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.01, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.1,adaptive,0.01,sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.01, 'classify': MLPRegressor(activation='relu', alpha=0.10000000000000001, batch_size='auto',
       beta_1=0.9, beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.01, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.10000000000000001, 'reduce_dim__k': 10}",15,0.9981182344825387,0.9986755424659994,0.9986838990327694,0.9988350927780165,0.9987899855860835,0.9986548775156858,0.9982464824201617,0.9987595371217018,0.9984861291477869,0.9987629393494818,0.4012567742873893,0.0008733610081066699,0.0002537617389940509,6.530284621706225e-05
23,6.511709928512573,0.0077610969543457035,0.9984611398601313,0.998675638287596,"MLPRegressor(activation='relu', alpha=0.001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.01, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.001,adaptive,0.01,sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.01, 'classify': MLPRegressor(activation='relu', alpha=0.001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.01, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.001, 'reduce_dim__k': 10}",16,0.9984135198448555,0.9987424651388442,0.9988081568405007,0.9988063124765922,0.9985288312093518,0.9984830763496008,0.9979291231952011,0.9985821298777733,0.9986260682107481,0.998764207595169,0.3088060564789491,0.002446042523897878,0.00029580860767715404,0.00012264584512620207
53,6.166633939743042,0.006923103332519531,0.9984547631502182,0.9987281231082242,"MLPRegressor(activation='relu', alpha=9.9999999999999995e-07,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.01, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)","0,000001",adaptive,0.01,sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.01, 'classify': MLPRegressor(activation='relu', alpha=9.9999999999999995e-07,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.01, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 9.9999999999999995e-07, 'reduce_dim__k': 10}",17,0.9980981245461552,0.9986016453081007,0.9986376680025363,0.9987082722814862,0.9988158771660877,0.9988126111339851,0.9980363127999705,0.9986552213974407,0.9986858332363419,0.9988628654201083,0.5100673052914196,0.0028046359134021462,0.0003223484734539546,9.695263357977556e-05
43,5.0784026145935055,0.007344961166381836,0.9984527419285729,0.9986996724261411,"MLPRegressor(activation='relu', alpha=1.0000000000000001e-05,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.01, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)","0,00001",adaptive,0.01,sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.01, 'classify': MLPRegressor(activation='relu', alpha=1.0000000000000001e-05,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.01, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 1.0000000000000001e-05, 'reduce_dim__k': 10}",18,0.9982817435873385,0.9987378940028618,0.9986573149557231,0.9987362274247277,0.9988067191691784,0.9988230745721115,0.9980446727403344,0.9985132797336149,0.9984732591902898,0.9986878863973893,0.5980223811724176,0.0020456294802232025,0.0002695670096384264,0.0001028653418598135
4,11.487864255905151,0.005445241928100586,0.998382507809766,0.9987271285935815,"MLPRegressor(activation='relu', alpha=0.10000000000000001, batch_size='auto',
       beta_1=0.9, beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.1,adaptive,0.001,adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.001, 'classify': MLPRegressor(activation='relu', alpha=0.10000000000000001, batch_size='auto',
       beta_1=0.9, beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.10000000000000001, 'reduce_dim__k': 10}",19,0.9982213355970914,0.9987323756751817,0.9986410181424773,0.9987586681911196,0.998821173971139,0.9987757138454664,0.9979986611975731,0.9987470337317848,0.9982303501405484,0.998621851524355,1.2380136435546711,0.002331210932997924,0.00030190139230695616,5.452023589587575e-05
14,12.617054557800293,0.01017932891845703,0.998210183545803,0.9987374366958557,"MLPRegressor(activation='relu', alpha=0.01, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.01,adaptive,0.001,adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.001, 'classify': MLPRegressor(activation='relu', alpha=0.01, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.01, 'reduce_dim__k': 10}",20,0.9980789542765984,0.9987720364386812,0.9985329658028884,0.99879163495247,0.9986343060295517,0.9986720105946985,0.9978795970243791,0.9987509729183435,0.9979250945955976,0.9987005285750852,2.6627041796651905,0.007226726900162115,0.0003136407325213499,4.463318638481866e-05
24,10.53700032234192,0.0067409038543701175,0.998200254215021,0.9986775317833523,"MLPRegressor(activation='relu', alpha=0.001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.001,adaptive,0.001,adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.001, 'classify': MLPRegressor(activation='relu', alpha=0.001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.001, 'reduce_dim__k': 10}",21,0.9982431681378802,0.9988440470077327,0.9981399521563383,0.9984345472222863,0.9985982188194821,0.9987544297105276,0.9978668943698719,0.9987046001242644,0.9981530375915326,0.9986500348519507,1.2273811831204413,0.001513698590202941,0.00023546208414600134,0.00013723766566579206
34,10.569681978225708,0.006466484069824219,0.998192013704443,0.9987426483646956,"MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.0001,adaptive,0.001,adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.001, 'classify': MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.0001, 'reduce_dim__k': 10}",22,0.997916806827918,0.998825149566882,0.9984764416146769,0.9986738175054372,0.9985934101732516,0.9987714475231623,0.9978256970583419,0.9987950333491715,0.9981477128480261,0.9986477938788253,1.3492846267090965,0.000799467838646517,0.00030129973025834695,6.944794765160473e-05
54,13.569710540771485,0.007226324081420899,0.9981491624613027,0.9986418296861116,"MLPRegressor(activation='relu', alpha=9.9999999999999995e-07,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)","0,000001",adaptive,0.001,adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.001, 'classify': MLPRegressor(activation='relu', alpha=9.9999999999999995e-07,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 9.9999999999999995e-07, 'reduce_dim__k': 10}",23,0.9976067440728629,0.9986027003729872,0.9983959819652988,0.9986314053963501,0.9985110407384011,0.9986724737074594,0.9980882159246993,0.9988110178038156,0.998143829605251,0.9984915511499458,0.7240256558300183,0.0027208395627603887,0.0003129972468836983,0.00010371796624631362
44,11.87630352973938,0.006758308410644532,0.998124040508049,0.9987900281687192,"MLPRegressor(activation='relu', alpha=1.0000000000000001e-05,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)","0,00001",adaptive,0.001,adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.001, 'classify': MLPRegressor(activation='relu', alpha=1.0000000000000001e-05,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 1.0000000000000001e-05, 'reduce_dim__k': 10}",24,0.9978897156967153,0.9988733270493322,0.9985421775146813,0.9989411018987612,0.9987079538312942,0.9988586794432269,0.9973846769489507,0.9986522188900694,0.9980956785486038,0.9986248135622068,0.9593805214745682,0.0026169694167983907,0.00047289836452483466,0.00012709227860003267
10,1.3978448867797852,0.00809340476989746,0.9980404522460059,0.9984572269814164,"MLPRegressor(activation='relu', alpha=0.01, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.10000000000000001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.01,adaptive,0.1,adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.10000000000000001, 'classify': MLPRegressor(activation='relu', alpha=0.01, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.10000000000000001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.01, 'reduce_dim__k': 10}",25,0.9963527780816858,0.9971971036690429,0.9987549823565354,0.9988786966994689,0.9989651956422054,0.9991687208016877,0.9977162105811609,0.9983218394916269,0.9984130945684427,0.998719774245256,0.2971450573124997,0.003432523530728492,0.0009442396592257866,0.0006868816171725525
30,1.068767786026001,0.005916213989257813,0.9977891694823091,0.9980820812249938,"MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.10000000000000001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.0001,adaptive,0.1,adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.10000000000000001, 'classify': MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.10000000000000001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.0001, 'reduce_dim__k': 10}",26,0.9975317031264862,0.9982541851486221,0.9977728883339234,0.9979011169419976,0.9972899682587053,0.9974378389840589,0.9984381315610511,0.9988803515160176,0.9979131561313798,0.997936913534273,0.30809080445492415,0.002246573471619358,0.0003878866665957766,0.00047659731707466415
40,1.3321542263031005,0.013614654541015625,0.9975849207848724,0.9980257841006533,"MLPRegressor(activation='relu', alpha=1.0000000000000001e-05,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.10000000000000001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)","0,00001",adaptive,0.1,adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.10000000000000001, 'classify': MLPRegressor(activation='relu', alpha=1.0000000000000001e-05,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.10000000000000001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 1.0000000000000001e-05, 'reduce_dim__k': 10}",27,0.9968111420488995,0.9976993058632341,0.9977968851991456,0.9977754125293308,0.9984763294417016,0.9985857971596912,0.9972797895089445,0.9983372568352229,0.9975604577256706,0.9977311481157883,0.38362741391251975,0.016373684261228583,0.0005535296514997027,0.0003651613937659546
20,1.0745261192321778,0.007563114166259766,0.9973861512873624,0.997729993854181,"MLPRegressor(activation='relu', alpha=0.001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.10000000000000001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.001,adaptive,0.1,adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.10000000000000001, 'classify': MLPRegressor(activation='relu', alpha=0.001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.10000000000000001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.001, 'reduce_dim__k': 10}",28,0.9952054648298498,0.9961509358587813,0.9981009013109085,0.9983818758270905,0.997159888355277,0.9969059745183376,0.9986518309107038,0.9993016209550556,0.9978126710300727,0.9979095621116401,0.2085665444209478,0.0023828775297419654,0.0011917482902389042,0.0011045033842025176
55,11.949100494384766,0.005130958557128906,0.9972135731868366,0.9975623439427878,"MLPRegressor(activation='relu', alpha=9.9999999999999995e-07,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)","0,000001",adaptive,0.001,sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.001, 'classify': MLPRegressor(activation='relu', alpha=9.9999999999999995e-07,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 9.9999999999999995e-07, 'reduce_dim__k': 10}",29,0.9966450169201706,0.997535427436528,0.9976379658975841,0.9977282456387375,0.9974809571791379,0.997493594381766,0.9968193865178115,0.9974697658445759,0.9974845394194795,0.9975846864123309,1.3228865993578298,0.0016133520008036056,0.00040091531023634275,9.169979649130224e-05
5,12.013922119140625,0.007067394256591797,0.9970994340889147,0.9974895662700567,"MLPRegressor(activation='relu', alpha=0.10000000000000001, batch_size='auto',
       beta_1=0.9, beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.1,adaptive,0.001,sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.001, 'classify': MLPRegressor(activation='relu', alpha=0.10000000000000001, batch_size='auto',
       beta_1=0.9, beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.10000000000000001, 'reduce_dim__k': 10}",30,0.9966343838535852,0.9976484461505305,0.9974078925407877,0.9975412075588742,0.9975437325863655,0.9973558073822592,0.9967627056478066,0.9974594255291821,0.9971484558160282,0.997442944729437,2.172876743815994,0.003780623823715684,0.0003534426871585527,9.887680365502097e-05
45,11.821474599838258,0.009659814834594726,0.9970895945741653,0.9974437236218769,"MLPRegressor(activation='relu', alpha=1.0000000000000001e-05,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)","0,00001",adaptive,0.001,sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.001, 'classify': MLPRegressor(activation='relu', alpha=1.0000000000000001e-05,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 1.0000000000000001e-05, 'reduce_dim__k': 10}",31,0.9962698526962911,0.9972440915610336,0.9973443179324937,0.9974537392345139,0.997598499170597,0.9974671822972733,0.9971700440268264,0.997668220791226,0.997065259044618,0.9973853842253378,1.5724539313719688,0.005675851905636963,0.00044786358555254374,0.00013733611753555087
25,10.013621139526368,0.0068782329559326175,0.9970505053675252,0.9974405776979559,"MLPRegressor(activation='relu', alpha=0.001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.001,adaptive,0.001,sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.001, 'classify': MLPRegressor(activation='relu', alpha=0.001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.001, 'reduce_dim__k': 10}",32,0.9964950486642883,0.9975686049696615,0.9974991725570568,0.9975533712676732,0.9976206155962857,0.997289577781403,0.99656549224407,0.9973239536329447,0.9970721977759252,0.9974673808380969,1.2596842069137946,0.0026051617351041697,0.00046272418557414635,0.00011509468044186662
35,9.689896440505981,0.0046079158782958984,0.997048374416223,0.9973998538439617,"MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.0001,adaptive,0.001,sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.001, 'classify': MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.0001, 'reduce_dim__k': 10}",33,0.9963251595790478,0.9972444433087659,0.9972472198348367,0.9974579689563743,0.997590441375653,0.9973768521308067,0.9970192572246567,0.997460128945716,0.9970597940669207,0.997459875878145,0.46770406659053804,0.0007791739633445599,0.0004140999900957481,8.401739347018209e-05
15,11.22406964302063,0.006002092361450195,0.9970260875651622,0.9973717059764127,"MLPRegressor(activation='relu', alpha=0.01, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.01,adaptive,0.001,sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.001, 'classify': MLPRegressor(activation='relu', alpha=0.01, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.01, 'reduce_dim__k': 10}",34,0.9964732080509451,0.9973056577543165,0.997236522399421,0.9972965813212713,0.9971585717818325,0.9971598644623187,0.9966265108792435,0.9974611334156878,0.9976356247143691,0.9976352929284688,0.8237564402015747,0.002697385629424216,0.00042395936328149165,0.00016270111046658704
0,1.2587101936340332,0.00665130615234375,0.9970120414186228,0.9971228672416682,"MLPRegressor(activation='relu', alpha=0.10000000000000001, batch_size='auto',
       beta_1=0.9, beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.10000000000000001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.1,adaptive,0.1,adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.10000000000000001, 'classify': MLPRegressor(activation='relu', alpha=0.10000000000000001, batch_size='auto',
       beta_1=0.9, beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.10000000000000001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.10000000000000001, 'reduce_dim__k': 10}",35,0.9982739257594228,0.9984870651597731,0.9917087134847961,0.9918043761748617,0.9990602329683421,0.999067566891598,0.9977367960650317,0.9979450153165718,0.9982805388155209,0.9983103126655363,0.3240440702103063,0.002098412399087805,0.0026850356731720894,0.002683847760497314
50,1.1649340629577636,0.00611262321472168,0.9962882144726922,0.9968304517445583,"MLPRegressor(activation='relu', alpha=9.9999999999999995e-07,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.10000000000000001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)","0,000001",adaptive,0.1,adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.10000000000000001, 'classify': MLPRegressor(activation='relu', alpha=9.9999999999999995e-07,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.10000000000000001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 9.9999999999999995e-07, 'reduce_dim__k': 10}",36,0.9945359499605554,0.9954186646749433,0.9986052097698196,0.9986886793825801,0.9967869740971695,0.9973090122205689,0.9983504874363865,0.9989058238666966,0.9931624510995299,0.9938300785780028,0.14906585385657542,0.0014899926966097838,0.0021312449756985073,0.0019485677508249393
57,14.787424755096435,0.006240653991699219,0.990837338541677,0.9908264142709637,"MLPRegressor(activation='relu', alpha=9.9999999999999995e-07,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.0001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)","0,000001",adaptive,0.0001,sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.0001, 'classify': MLPRegressor(activation='relu', alpha=9.9999999999999995e-07,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.0001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 9.9999999999999995e-07, 'reduce_dim__k': 10}",37,0.9897430641920685,0.9909004919699389,0.990541051039667,0.9901192955196811,0.9911172711616856,0.9902346918798134,0.989254647862638,0.9902691295760926,0.9935306584523264,0.9926084624092923,1.1400394208569786,0.0017329306733711214,0.0014914735555430175,0.0009318692634213976
6,18.80084047317505,0.007596254348754883,0.9907571058947293,0.9910029785796317,"MLPRegressor(activation='relu', alpha=0.10000000000000001, batch_size='auto',
       beta_1=0.9, beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.0001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.1,adaptive,0.0001,adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.0001, 'classify': MLPRegressor(activation='relu', alpha=0.10000000000000001, batch_size='auto',
       beta_1=0.9, beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.0001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.10000000000000001, 'reduce_dim__k': 10}",38,0.9899016729382463,0.9926745848154036,0.9902305748494498,0.9888221925893788,0.991699448308685,0.9912503552776654,0.989009507092681,0.990338683497004,0.9929443262845847,0.9919290767187066,0.889571902030812,0.002344349009311188,0.0013953525946183126,0.001334933398599815
47,16.088214302062987,0.011114215850830078,0.9901755610984477,0.9905734002650306,"MLPRegressor(activation='relu', alpha=1.0000000000000001e-05,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.0001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)","0,00001",adaptive,0.0001,sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.0001, 'classify': MLPRegressor(activation='relu', alpha=1.0000000000000001e-05,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.0001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 1.0000000000000001e-05, 'reduce_dim__k': 10}",39,0.9888604403390452,0.9911705548980688,0.9913909498447502,0.991880181187044,0.9903769606211075,0.9898096432320124,0.9891126359845958,0.9895095412551744,0.9911368187027401,0.9904970807528536,0.9124562597137202,0.005449910029453443,0.0010296698658934134,0.0008700822375124265
17,14.427968597412109,0.005923795700073242,0.9897691090395608,0.9904650926770604,"MLPRegressor(activation='relu', alpha=0.01, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.0001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.01,adaptive,0.0001,sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.0001, 'classify': MLPRegressor(activation='relu', alpha=0.01, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.0001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.01, 'reduce_dim__k': 10}",40,0.9886132744332714,0.9905932403793326,0.9906697962246784,0.9908732055511512,0.9898728172485084,0.988604239412872,0.9883309220241965,0.9909104741869461,0.9913587352671493,0.9913443038549997,2.1312813936652444,0.002131055570190675,0.0011621738139998116,0.000960950550985681
37,14.08731780052185,0.006065940856933594,0.9896763343012659,0.9902936509101492,"MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.0001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.0001,adaptive,0.0001,sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.0001, 'classify': MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.0001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.0001, 'reduce_dim__k': 10}",41,0.9872770177370885,0.9896988187060298,0.9898053407845062,0.9899505006785148,0.9920637951859713,0.9915885200103174,0.9881799585432683,0.9896050889962696,0.9910555592554947,0.9906253261596146,0.7494829926297354,0.0012621126793785546,0.0017671861253044355,0.000739241421925488
27,14.010670375823974,0.00979609489440918,0.9896643461987759,0.989949872077211,"MLPRegressor(activation='relu', alpha=0.001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.0001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.001,adaptive,0.0001,sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.0001, 'classify': MLPRegressor(activation='relu', alpha=0.001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.0001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.001, 'reduce_dim__k': 10}",42,0.9879256781721023,0.990402575341827,0.9919536221512915,0.9911353803586815,0.9890949082959041,0.9876920614567083,0.9886281238136855,0.9902031320250295,0.9907193985608961,0.9903162112038092,0.5847646675200318,0.006425758172733469,0.001467985200003596,0.0011752807227322134
7,18.810667324066163,0.010761451721191407,0.9894211217673601,0.9903122471007654,"MLPRegressor(activation='relu', alpha=0.10000000000000001, batch_size='auto',
       beta_1=0.9, beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.0001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.1,adaptive,0.0001,sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.0001, 'classify': MLPRegressor(activation='relu', alpha=0.10000000000000001, batch_size='auto',
       beta_1=0.9, beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.0001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='sgd', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.10000000000000001, 'reduce_dim__k': 10}",43,0.9863182899653529,0.9887406071121287,0.9899040598365086,0.9896354521201403,0.9933993253121252,0.9928508476294169,0.9873329569390573,0.9894236478167401,0.9901509767837565,0.9909106808254008,1.5494393102801123,0.004636257234893339,0.0024730555395656387,0.0014505397584418103
26,17.656860542297363,0.006687355041503906,0.9892246409078586,0.9901241384679251,"MLPRegressor(activation='relu', alpha=0.001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.0001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.001,adaptive,0.0001,adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.0001, 'classify': MLPRegressor(activation='relu', alpha=0.001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.0001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.001, 'reduce_dim__k': 10}",44,0.9860799385368294,0.9906986228291115,0.9927709930284456,0.9918020494256599,0.9878148831207495,0.9882956235351605,0.9888490344596814,0.9898683196534033,0.9906083553935867,0.9899560768962904,2.0927679620867665,0.0017064338903095774,0.002302560720840586,0.0011473946383351078
36,18.56342477798462,0.007529640197753906,0.9891415858727313,0.990896777268621,"MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.0001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.0001,adaptive,0.0001,adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.0001, 'classify': MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.0001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.0001, 'reduce_dim__k': 10}",45,0.9835349775538932,0.9897846151186295,0.9914710632915056,0.9919915901339436,0.9915061488577416,0.9912152115540146,0.989526712993561,0.9909863755011129,0.9896690266669544,0.9905060940354045,1.381312479454086,0.0023559480374555557,0.002928419255712339,0.0007345177307656901
16,16.564178133010863,0.006242084503173828,0.98902208316599,0.9900525781459857,"MLPRegressor(activation='relu', alpha=0.01, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.0001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)",0.01,adaptive,0.0001,adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.0001, 'classify': MLPRegressor(activation='relu', alpha=0.01, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.0001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.01, 'reduce_dim__k': 10}",46,0.9877578605899145,0.9917902045088023,0.9916453035084344,0.9914953637319172,0.9905671843448125,0.9907060567889256,0.9850187310147507,0.9871677532261098,0.9901213363720383,0.9891035124741736,0.6621634041460054,0.0018636394381436338,0.0023707411245225156,0.0017176117389127467
46,16.72029604911804,0.004553079605102539,0.9887219952004547,0.9893317404677969,"MLPRegressor(activation='relu', alpha=1.0000000000000001e-05,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.0001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)","0,00001",adaptive,0.0001,adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.0001, 'classify': MLPRegressor(activation='relu', alpha=1.0000000000000001e-05,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.0001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 1.0000000000000001e-05, 'reduce_dim__k': 10}",47,0.9908256336337045,0.9934192253580083,0.9900405938872232,0.9893815639176828,0.9864144146723683,0.9862996151035414,0.9869463402967885,0.988684211808934,0.9893829935121885,0.9888740861508185,0.5717505709863897,0.0010309196312461306,0.0017365940316162066,0.002303585907507019
56,18.92630124092102,0.006995201110839844,0.9883085348680146,0.9895805666115518,"MLPRegressor(activation='relu', alpha=9.9999999999999995e-07,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.0001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)","0,000001",adaptive,0.0001,adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 0.0001, 'classify': MLPRegressor(activation='relu', alpha=9.9999999999999995e-07,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=0.0001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 9.9999999999999995e-07, 'reduce_dim__k': 10}",48,0.9850937865766882,0.9897735895545112,0.9918989088861845,0.9913874673581748,0.9884487512874105,0.9890352528490841,0.9876318804831844,0.9893580917323145,0.9884693471066057,0.9883484315636746,1.277850031901355,0.0018066175846877125,0.002178475363358238,0.0010165792750485682
49,18.860083627700806,0.007919788360595703,0.87131611717345,0.8746490486426675,"MLPRegressor(activation='relu', alpha=1.0000000000000001e-05,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=1.0000000000000001e-05, max_iter=200,
       momentum=0.9, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='sgd', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False)","0,00001",adaptive,"0,00001",sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 1.0000000000000001e-05, 'classify': MLPRegressor(activation='relu', alpha=1.0000000000000001e-05,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=1.0000000000000001e-05, max_iter=200,
       momentum=0.9, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='sgd', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 1.0000000000000001e-05, 'reduce_dim__k': 10}",49,0.8832739648049112,0.8944567114185007,0.868712893041202,0.8708169240591536,0.8740357054315775,0.874060148272022,0.8599643932750216,0.865279662587078,0.8705936293145378,0.8686317968765831,1.8111932447005354,0.0034450826176616605,0.00757029299731695,0.01030891071827055
29,14.132497930526734,0.006438732147216797,0.8664984158142961,0.8708723379302035,"MLPRegressor(activation='relu', alpha=0.001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=1.0000000000000001e-05, max_iter=200,
       momentum=0.9, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='sgd', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False)",0.001,adaptive,"0,00001",sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 1.0000000000000001e-05, 'classify': MLPRegressor(activation='relu', alpha=0.001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=1.0000000000000001e-05, max_iter=200,
       momentum=0.9, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='sgd', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.001, 'reduce_dim__k': 10}",50,0.8431342019295656,0.8560358843062941,0.8372396155550713,0.8479999193474012,0.8746889013715954,0.8750147798880963,0.8895382381755195,0.890969712567748,0.887891122039729,0.8843413935414779,1.3215252751835962,0.002114322505822129,0.02216993112668318,0.01640577727337092
59,13.71298246383667,0.0055694580078125,0.8630787476200729,0.8668435378384445,"MLPRegressor(activation='relu', alpha=9.9999999999999995e-07,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=1.0000000000000001e-05, max_iter=200,
       momentum=0.9, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='sgd', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False)","0,000001",adaptive,"0,00001",sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 1.0000000000000001e-05, 'classify': MLPRegressor(activation='relu', alpha=9.9999999999999995e-07,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=1.0000000000000001e-05, max_iter=200,
       momentum=0.9, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='sgd', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 9.9999999999999995e-07, 'reduce_dim__k': 10}",51,0.8426426905733937,0.8585955609425464,0.8449035864931291,0.8499685606056591,0.8650513688838273,0.8646945093436326,0.902541842537352,0.9014785473665586,0.8602542496126623,0.8594805109338255,0.6059201703314739,0.0018171028922531125,0.021527534896962814,0.0179511022122014
19,15.012010288238525,0.007595348358154297,0.8627336039273128,0.8673170133187267,"MLPRegressor(activation='relu', alpha=0.01, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=1.0000000000000001e-05, max_iter=200,
       momentum=0.9, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='sgd', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False)",0.01,adaptive,"0,00001",sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 1.0000000000000001e-05, 'classify': MLPRegressor(activation='relu', alpha=0.01, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=1.0000000000000001e-05, max_iter=200,
       momentum=0.9, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='sgd', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.01, 'reduce_dim__k': 10}",52,0.8364204938912123,0.8526029956806742,0.892564800952977,0.8903192438464845,0.8575107096628065,0.8598366673851933,0.894002463568786,0.8954569095817964,0.833169551560782,0.8383692500994847,1.1503404836628106,0.0019339953492923739,0.026310961502245662,0.02205169951130291
39,17.03435287475586,0.009988737106323243,0.8624270471383012,0.8636894744710389,"MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=1.0000000000000001e-05, max_iter=200,
       momentum=0.9, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='sgd', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False)",0.0001,adaptive,"0,00001",sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 1.0000000000000001e-05, 'classify': MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=1.0000000000000001e-05, max_iter=200,
       momentum=0.9, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='sgd', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.0001, 'reduce_dim__k': 10}",53,0.8396160849617087,0.8521368599309354,0.8682677624593064,0.8681686513514545,0.8691069693702639,0.8706947102012974,0.8556907926704126,0.8543657398542708,0.8794536262298142,0.8730814110172367,1.186044572588712,0.004076931405122056,0.01367009020982468,0.008691832432421573
9,18.149262285232545,0.010345554351806641,0.857994376231209,0.8633764312873774,"MLPRegressor(activation='relu', alpha=0.10000000000000001, batch_size='auto',
       beta_1=0.9, beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=1.0000000000000001e-05, max_iter=200,
       momentum=0.9, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='sgd', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False)",0.1,adaptive,"0,00001",sgd,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'sgd', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 1.0000000000000001e-05, 'classify': MLPRegressor(activation='relu', alpha=0.10000000000000001, batch_size='auto',
       beta_1=0.9, beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=1.0000000000000001e-05, max_iter=200,
       momentum=0.9, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='sgd', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.10000000000000001, 'reduce_dim__k': 10}",54,0.8286366767907158,0.8413513306225552,0.882047448546395,0.8876847584705762,0.894664452386767,0.8975073297516254,0.8121747299421188,0.8191297748770716,0.8724485734900496,0.8712089627150588,1.5737907444641577,0.003475905014528388,0.03191702709823436,0.02918915282009763
58,16.403061723709108,0.005954599380493164,-0.4345095045576692,-0.4238256365077519,"MLPRegressor(activation='relu', alpha=9.9999999999999995e-07,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=1.0000000000000001e-05, max_iter=200,
       momentum=0.9, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='adam', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False)","0,000001",adaptive,"0,00001",adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 1.0000000000000001e-05, 'classify': MLPRegressor(activation='relu', alpha=9.9999999999999995e-07,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=1.0000000000000001e-05, max_iter=200,
       momentum=0.9, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='adam', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 9.9999999999999995e-07, 'reduce_dim__k': 10}",60,-0.49537617404962964,-0.5356951174410851,-0.4607967629486742,-0.4303652498093409,-0.22385388815641719,-0.24998684612595864,-0.37005753022234167,-0.36244449578460053,-0.6224631674112828,-0.5406364733777744,1.0347719997272242,0.0011991740730687224,0.1328549558774245,0.10971771816309624
28,17.424781703948973,0.00569300651550293,-0.4116643197706214,-0.40056468340672924,"MLPRegressor(activation='relu', alpha=0.001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=1.0000000000000001e-05, max_iter=200,
       momentum=0.9, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='adam', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False)",0.001,adaptive,"0,00001",adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 1.0000000000000001e-05, 'classify': MLPRegressor(activation='relu', alpha=0.001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=1.0000000000000001e-05, max_iter=200,
       momentum=0.9, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='adam', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.001, 'reduce_dim__k': 10}",59,-0.5658112583778159,-0.616099628526833,-0.13643686335143435,-0.10353643116813772,-0.23501235227007533,-0.2715831443504384,-0.5672537780650615,-0.5560990101035628,-0.5538073467887199,-0.455505202884674,2.555436766372097,0.001484304565404887,0.1871523810871691,0.18895857751089878
38,16.998668479919434,0.004810142517089844,-0.3959317831198842,-0.3877769627430522,"MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=1.0000000000000001e-05, max_iter=200,
       momentum=0.9, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='adam', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False)",0.0001,adaptive,"0,00001",adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 1.0000000000000001e-05, 'classify': MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=1.0000000000000001e-05, max_iter=200,
       momentum=0.9, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='adam', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.0001, 'reduce_dim__k': 10}",58,-0.3470278368348194,-0.39438138205966844,-0.5261966646581511,-0.4934485163372322,-0.18251333228214972,-0.21213817368790844,-0.3299354449269849,-0.33088419209904196,-0.5939856368973155,-0.5080325495314097,0.6589853985071156,0.0013888658812916965,0.14730160632754374,0.10932270882084727
48,19.364796304702757,0.00850820541381836,-0.35866267890934067,-0.35929692860027973,"MLPRegressor(activation='relu', alpha=1.0000000000000001e-05,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=1.0000000000000001e-05, max_iter=200,
       momentum=0.9, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='adam', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False)","0,00001",adaptive,"0,00001",adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 1.0000000000000001e-05, 'classify': MLPRegressor(activation='relu', alpha=1.0000000000000001e-05,
       batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
       epsilon=1e-08, hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=1.0000000000000001e-05, max_iter=200,
       momentum=0.9, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='adam', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 1.0000000000000001e-05, 'reduce_dim__k': 10}",57,-0.4435380402296085,-0.49501348785990906,-0.4585101388839093,-0.4354131777886405,-0.273632055598247,-0.31342805281517294,-0.4805111359637248,-0.4688802772985101,-0.13712202387121386,-0.0837496472391659,1.5407276256896063,0.002643811159812327,0.13291415082266345,0.15116311467483426
8,17.157440757751466,0.009264993667602538,-0.3154465627287522,-0.306896000663211,"MLPRegressor(activation='relu', alpha=0.10000000000000001, batch_size='auto',
       beta_1=0.9, beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=1.0000000000000001e-05, max_iter=200,
       momentum=0.9, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='adam', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False)",0.1,adaptive,"0,00001",adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 1.0000000000000001e-05, 'classify': MLPRegressor(activation='relu', alpha=0.10000000000000001, batch_size='auto',
       beta_1=0.9, beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=1.0000000000000001e-05, max_iter=200,
       momentum=0.9, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='adam', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.10000000000000001, 'reduce_dim__k': 10}",56,-0.6652564373481096,-0.6966917928796035,-0.22522786664758995,-0.21299451723062401,-0.23218061069074428,-0.2626526579275592,-0.31870010986358976,-0.31455813358219675,-0.13586778909372765,-0.047582901696071385,1.3045299790461167,0.0037265724932711197,0.18422741477956503,0.21448436454608039
18,19.733980798721312,0.007600307464599609,-0.16810087581892183,-0.15474607997496465,"MLPRegressor(activation='relu', alpha=0.01, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=1.0000000000000001e-05, max_iter=200,
       momentum=0.9, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='adam', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False)",0.01,adaptive,"0,00001",adam,"SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>)",10,"{'classify__solver': 'adam', 'classify__learning_rate': 'adaptive', 'classify__learning_rate_init': 1.0000000000000001e-05, 'classify': MLPRegressor(activation='relu', alpha=0.01, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='adaptive',
       learning_rate_init=1.0000000000000001e-05, max_iter=200,
       momentum=0.9, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='adam', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False), 'reduce_dim': SelectKBest(k=10, score_func=<function f_regression at 0x7fc2f36e5bf8>), 'classify__alpha': 0.01, 'reduce_dim__k': 10}",55,-0.05266842807664828,-0.06926832953550965,-0.08572494249315055,-0.06410486124361525,-0.42277664355026484,-0.4588901902547433,-0.125196223918689,-0.11733585505152289,-0.15413814105585644,-0.06413116378943218,1.0637245814345588,0.004043563039203447,0.13191357638193082,0.153386116800254
